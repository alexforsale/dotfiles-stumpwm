;; -*-lisp-*-

;; sources:
;; https://github.com/herbertjones/my-stumpwm-config

(in-package :stumpwm)
(ql:quickload :slynk)

(require :slynk)
(let ((server-running nil))
  (defcommand stump-slynk () ()
    "Toggle the slynk server on/off"
    (if server-running
        (progn
          (slynk:stop-server 4004)
          (echo-string
           (current-screen)
           "stopping slynk.")
          (setf server-running nil)
          )
        (progn
          (slynk:create-server :port 4004
                               :dont-close t)
          (echo-string
           (current-screen)
           "starting slynk. M-x sly-connect RET 4004 then (in package stumpwm).")
          (setf server-running t)))))

;; from arch wiki
(set-prefix-key (kbd "s-SPC"))
(setf *mouse-focus-policy* :click)
(setf *window-format* "%m%n%s%c")
(setf *screen-mode-line-format* (list "[^B%n^b] %W^>%d"))
(setf *time-modeline-string* "%a %b %e %k:%M")
(setf *mode-line-timeout* 2)
(enable-mode-line (current-screen) (current-head) t)

;; keybinding
;; top map
(define-key *top-map* (kbd "s-TAB") "gother")
(define-key *top-map* (kbd "s-d") "exec rofi-menu")
(define-key *top-map* (kbd "s-w") "exec rofi -show windowcd -theme themes/stump.rasi")
(define-key *top-map* (kbd "s-W") "exec rofi -show window -theme themes/stump.rasi")

;; root map
;; after prefix-key
(define-key *root-map* (kbd "s") "stump-slynk")
(define-key *root-map* (kbd "s-s") "stump-slynk")

;; groups
(define-key *top-map* (kbd "s-1") "gselect 1")
(define-key *top-map* (kbd "s-2") "gselect 2")
(define-key *top-map* (kbd "s-3") "gselect 3")
(define-key *top-map* (kbd "s-4") "gselect 4")
(define-key *top-map* (kbd "s-5") "gselect 5")
(define-key *top-map* (kbd "s-6") "gselect 6")
(define-key *top-map* (kbd "s-7") "gselect 7")
(define-key *top-map* (kbd "s-8") "gselect 8")
(define-key *top-map* (kbd "s-9") "gselect 9")
(define-key *top-map* (kbd "s-0") "gselect 0")
(define-key *top-map* (kbd "s-!") "gmove 1")
(define-key *top-map* (kbd "s-@") "gmove 2")
(define-key *top-map* (kbd "s-#") "gmove 3")
(define-key *top-map* (kbd "s-$") "gmove 4")
(define-key *top-map* (kbd "s-%") "gmove 5")
(define-key *top-map* (kbd "s-^") "gmove 6")
(define-key *top-map* (kbd "s-&") "gmove 7")
(define-key *top-map* (kbd "s-*") "gmove 8")
(define-key *top-map* (kbd "s-(") "gmove 9")
(define-key *top-map* (kbd "s-)") "gmove 0")

(run-commands "grename dev")

(setf *mode-line-timeout* 2)
